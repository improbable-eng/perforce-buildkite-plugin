#!/bin/bash
set -eo pipefail

plugin_root="${BASH_SOURCE%/*}/.."


# Try to use explicit python3 if its installed
python_bin="python3"
if ! [[ -x "$(command -v ${python_bin})" ]]; then
    python_bin="python"
fi

# Ensure some version of virtualenv is installed
# Lazy install avoids races between different jobs wanting different versions
if [[ ! $(${python_bin} -m pip freeze) =~ "virtualenv==" ]]; then
    ${python_bin} -m pip install "virtualenv==16.7.7"
fi

# Unique virtualenv for requirements.txt
venv_md5=$(md5sum "${plugin_root}/python/requirements.txt" | awk '{print $1}')
venv_dir="${BUILDKITE_BUILD_CHECKOUT_PATH}/../.perforce-plugin-venv-${venv_md5}"

platform=$(${python_bin} -c "import platform; print(platform.system())")
if [[ "${platform}" == "Windows" ]]; then
    venv_bin="${venv_dir}/Scripts"
else
    venv_bin="${venv_dir}/bin"
fi

if ! [[ -d "${venv_dir}" ]]; then
    ${python_bin} -m virtualenv "${venv_dir}"
    "${venv_bin}/python" -m pip install -r "${plugin_root}/python/requirements.txt"
fi

"${venv_bin}/python" "${plugin_root}/python/checkout.py"
